from typing import Any, List, Dict

import attr
from flask import jsonify, request
from dialogy.types.intent import Intent

from [[python_package_import_name]] import constants as const
from [[python_package_import_name]].src.api import app
from [[python_package_import_name]].src.controller.prediction import predict_wrapper

[% raw %]
@app.route("/", methods=["GET"])
def health_check():
    """
    Get server status health.

    The purpose of this API is to help other people/machines know liveness of the application.
    """
    return jsonify(
        status="ok",
        response={"message": "Server is up."},
    )


@app.route("/predict/<lang>/<project_name>/", methods=["POST"])
def slu(lang, project_name):
    """
    Get SLU predictions.

    Produces a json response containing intents and entities.
    """
    utterance: List[List[Dict[str, Any]]] = request.json.get(const.ALTERNATIVES)
    context: str = request.json.get(const.CONTEXT)

    predict = predict_wrapper()

    if not utterance:
        utterance = [[{const.TRANSCRIPT: request.json.get(const.TEXT)}]]

    if not utterance:
        return {const.INTENTS: [attr.asdict(Intent(name=const.S_INTENT_ERROR, score=1))]}

    response = predict(utterance, context)

    return jsonify(status="ok", response=response)

[% endraw %]